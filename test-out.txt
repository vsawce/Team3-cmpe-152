Tokens:
[@0,0:0='\n',<1>,1:0]
[@1,2:7='begins',<58>,2:1]
[@2,9:13='BEGIN',<58>,2:8]
[@3,15:19='begin',<6>,2:14]
[@4,21:25='Begin',<58>,2:20]
[@5,27:31='BeGiN',<58>,2:26]
[@6,32:32='\n',<1>,2:31]
[@7,33:33='\n',<1>,3:0]
[@8,34:41=''Hello.'',<2>,4:0]
[@9,42:42='\n',<1>,4:8]
[@10,43:44='''',<2>,5:0]
[@11,45:45='\n',<1>,5:2]
[@12,46:46='\n',<1>,6:0]
[@13,47:53=''world'',<2>,7:0]
[@14,54:54='\n',<1>,7:7]
[@15,55:55='\n',<1>,8:0]
[@16,56:60='hElLo',<58>,9:0]
[@17,62:66='worlD',<58>,9:6]
[@18,67:67='\n',<1>,9:11]
[@19,68:68='\n',<1>,10:0]
[@20,69:71='4.5',<57>,11:0]
[@21,72:72='\n',<1>,11:3]
[@22,73:75=''A'',<2>,12:0]
[@23,77:79=''B'',<2>,12:4]
[@24,80:80='\n',<1>,12:7]
[@25,81:81='+',<59>,13:0]
[@26,83:83='-',<60>,13:2]
[@27,85:85='*',<61>,13:4]
[@28,87:87='/',<62>,13:6]
[@29,89:90=':=',<63>,13:8]
[@30,92:92='.',<85>,13:11]
[@31,94:94=',',<76>,13:13]
[@32,96:96=';',<75>,13:15]
[@33,100:100='=',<64>,13:19]
[@34,102:103='<>',<65>,13:21]
[@35,105:105='<',<68>,13:24]
[@36,107:108='<=',<66>,13:26]
[@37,110:111='>=',<67>,13:29]
[@38,113:113='>',<69>,13:32]
[@39,115:115='(',<77>,13:34]
[@40,117:117=')',<78>,13:36]
[@41,119:119='[',<79>,13:38]
[@42,121:121=']',<80>,13:40]
[@43,123:123='{',<81>,13:42]
[@44,125:125='}',<82>,13:44]
[@45,127:127='}',<82>,13:46]
[@46,129:129='^',<74>,13:48]
[@47,131:131='.',<85>,13:50]
[@48,132:132='.',<85>,13:51]
[@49,133:133='\n',<1>,13:52]
[@50,136:136='>',<69>,14:2]
[@51,137:137='<',<68>,14:3]
[@52,138:138='\n',<1>,14:4]
[@53,139:139='\n',<1>,15:0]
[@54,140:140='3',<56>,16:0]
[@55,142:142='9',<56>,16:2]
[@56,144:144='2',<56>,16:4]
[@57,146:146='5',<56>,16:6]
[@58,148:149='80',<56>,16:8]
[@59,151:155='23432',<56>,16:11]
[@60,156:156='\n',<1>,16:16]
[@61,157:157='\n',<1>,17:0]
[@62,158:158='\n',<1>,18:0]
[@63,161:161='\n',<1>,19:2]
[@64,162:162='\n',<1>,20:0]
[@65,163:163='/',<62>,21:0]
[@66,164:164='/',<62>,21:1]
[@67,165:165='\n',<1>,21:2]
[@68,166:165='<EOF>',<-1>,22:0]

Parse tree (Lisp format):
(program (statement \n) statement (statement begins) (statement BEGIN begin) statement (statement Begin) (statement (expr BeGiN) \n) (statement \n))
